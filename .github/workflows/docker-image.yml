name: Docker Image CI

on:
  push:
    branches: [ "main" ]



env: 
  ECS_SERVICE: task_service

  ECS_CLUSTER: app_cluster
  
  ECS_TASK_DEFINITION: .github/workflows/task-definition.json

  CONTAINER_NAME: app-image
  

jobs:

  # build:

  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Build the Docker image
  #       run: docker build . --file Dockerfile --tag leoimewore/job_search_app:v.${{github.run_number}}


      # - 
      #   name: Login to Docker Hub
      #   uses: docker/login-action@v2
      #   with:
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}


      # - 
      #   name: push
      #   uses: docker/build-push-action@v4
      #   with:
      #     push: true
      #     tags: |
      #       leoimewore/job_search_app:v.${{github.run_number}}
      #       leoimewore/job_search_app:latest

    build:
      name: Build Image
      runs-on: ubuntu-latest


      steps:


        - name: Check out code
          uses: actions/checkout@v2


        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v2
          with:
            aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
            aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
            aws-region: us-east-2

        - name: Login to Amazon ECR
          id: login-ecr
          uses: aws-actions/amazon-ecr-login@v1

        - name: Build, tag and push to Amazon ECR
          id: build-image
          env:
            ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
            ECR_REPOSITORY: app-image-repo
            IMAGE_TAG: v.${{github.sha}}
          run: |
            docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
            docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
            echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT


        # - name: Download task definition
        #   run: |
        #    aws ecs describe-task-definition --task-definition jb_task_def:1 --query taskDefinition > task-definition.json


        - name: Fill in the new image ID in the Amazon ECS task definition
          id: task-def
          uses: aws-actions/amazon-ecs-render-task-definition@v1
          with:
            task-definition: ${{env.ECS_TASK_DEFINITION}}
            container-name: ${{ env.CONTAINER_NAME }}
            image: ${{ steps.build-image.outputs.image }}


        - name: Deploy Amazon ECS task ECS_TASK_DEFINITION
          uses: aws-actions/amazon-ecs-deploy-task-definition@v1
          with:
            task-definition: ${{ steps.task-def.outputs.task-definition }}
            service: ${{ env.ECS_SERVICE }}
            cluster: ${{ env.ECS_CLUSTER }}
            wait-for-service-stability: true

        # - name: Update Service
        #   run:  aws ecs update-service --cluster app_cluster --service run_service --force-new-deployment

  








     
