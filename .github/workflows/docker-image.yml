name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag leoimewore/job_search_app:v.${{github.run_number}}


      - 
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}


      - 
        name: push
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: |
            leoimewore/job_search_app:v.${{github.run_number}}
            leoimewore/job_search_app:latest

  Update-ECS-service:
      runs-on: ubuntu-latest
      needs: build
      steps:
        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v2
          with:
            aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
            aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
            aws-region: us-east-2

        - name: Login to Amazon ECR
          id: login-ecr
          uses: aws-actions/amazon-ecr-login@v1

        - name: Tag and Push to Amazon ECR
          env:
            ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
            ECR_REPOSITORY: jobsapps-repo
            IMAGE_TAG: ${{ github.sha }}
          run: |
            docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
            docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
            echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"




        # - name: Update Service
        #   run:  aws ecs update-service --service run_service --cluster app_cluster --force-new-deployment

  








     
