---

- hosts: kubectl_server
  become: yes
  vars:
    AWS_REGION: "us-east-2"
  name: Deploy Application on EKS
  tasks:
    - name: Authenticate Docker with AWS ECR
      shell: |
        #aws ecr get-login-password --region {{ AWS_REGION }} | \
        docker login --username AWS --password-stdin {{ AWS_ACCOUNT_ID }}.dkr.ecr.{{ AWS_REGION }}.amazonaws.com 
    - name: Generate Kubernetes Deployment YAML
      template:
        src: deploy.yml.j2
        dest: deployment.yml

    # - name: Get a list of namespaces
    #   k8s_info:
    #     kubeconfig: /home/ubuntu/.kube/config
    #     kind: Namespace

   
    # - name: Generate Kubernetes Deployment YAML
    #   template:
    #     src: deploy.yml.j2
    #     dest: ./deployment.yml

    # - name: Ensure kubeconfig is correct
    #   command: cat /home/ec2-user/.kube/config
    #   register: kubeconfig_output

    # - name: Show kubeconfig
    #   debug:
    #     var: kubeconfig_output.stdout

    # - name: Apply Kubernetes Deployment
    #   command: kubectl apply -f deployment.yml
      # environment:
      #   AWS_ACCESS_KEY_ID: "{{ lookup('env', 'AWS_ACCESS_KEY_ID') }}"
      #   AWS_SECRET_ACCESS_KEY: "{{ lookup('env', 'AWS_SECRET_ACCESS_KEY') }}"
      #   AWS_DEFAULT_REGION: "{{ lookup('env', 'AWS_DEFAULT_REGION') }}"
      # register: kubectl_output
      # ignore_errors: yes

    # - name: Debug kubectl output
    #   debug:
    #     var: kubectl_output

    - name: Apply Kubernetes Deployment
      command: kubectl apply -f ./deployment.yml
      environment:
        KUBECONFIG: /home/ec2-user/.kube/config
